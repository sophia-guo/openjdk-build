name: Build

on:
  pull_request:
    branches: [ master ]

jobs:
  build_linux:
    name: Linux
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.image }}
    strategy:
      matrix:
        os: [linux]
        version: [jdk11u]
        vm: [hotspot]
        image: [adoptopenjdk/centos7_build_image]
    steps:
    - uses: actions/checkout@v2

    - name: Build Linux
      run: ./build-farm/make-adopt-build-farm.sh
      env:
        JAVA_TO_BUILD: ${{ matrix.version }}
        ARCHITECTURE: x64
        VARIANT: ${{ matrix.vm }}
        TARGET_OS: ${{ matrix.os }}
        FILENAME: OpenJDK.tar.gz
        # Don't set the OS as we use both linux and alpine-linux
        PLATFORM_CONFIG_LOCATION: AdoptOpenJDK/openjdk-build/master/build-farm/platform-specific-configurations

    - uses: actions/upload-artifact@v2
      name: Collect and Archive Artifacts
      with:
        name: ${{matrix.version}}-${{matrix.os}}-${{matrix.vm}}
        path: workspace/target/*
  build_linux_smoke:
    name: Linux x64 smoke
    runs-on: ubuntu-latest
    needs:
      - build_linux
    strategy:
      matrix:
        os: [linux]
        version: [jdk11u]
        vm: [hotspot]
        image: [adoptopenjdk/centos7_build_image]
    steps:
      - name: Checkout the source
        uses: actions/checkout@v2
      - name: Restore build artifacts
        id: build_restore
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.version}}-${{matrix.os}}-${{matrix.vm}}
          path: ~/${{matrix.version}}-${{matrix.os}}-${{matrix.vm}}
      - name: Unpack jdk
        run: |
          tar -xf "${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.vm}}/OpenJDK.tar.gz" -C "${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.vm}}"
      - name: Set root of jdk image dir
        run: |
          imageroot=`find ${HOME}/${{matrix.version}}-${{matrix.os}}-${{matrix.vm}} -name release -type f`
          echo "TEST_JDK_HOME=`dirname ${imageroot}`" >> $GITHUB_ENV
      - name: AQA smoke
        uses: smlambert/run-aqa@vendorRepos
        with:
          build_list: 'functional/buildAndPackage'
          target: '_extended.functional'
          version: ${{ matrix.version }}
          vendor_testRepos: "https://github.com/${{ github.repository }}.git"
          vendor_testBranches: "${{ github.head_ref }}"
          vendor_testDirs: "/test/functional"